

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        google()
        mavenCentral()

        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"

        }

        maven {
            name = "mongo"
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'

        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.5.0"
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2'



        // Scala plugins
        classpath "com.adtran:scala-multiversion-plugin:1.0.36"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.27.1"

        // Test logging plugin
        classpath 'com.adarshr:gradle-test-logger-plugin:2.1.0'
        classpath 'com.squareup.okhttp3:okhttp:4.9.0'
        classpath 'com.squareup.okio:okio:2.8.0'
        classpath 'com.jagrosh:DiscordIPC:0.4'











    }
}
apply plugin: 'net.minecraftforge.gradle.forge'



/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0.3"
group= "fr.konoashi.ScamerList" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ScammerList"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {


    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html






    compile "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"






}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {

    provided 'com.jagrosh:DiscordIPC:0.4'
    compile 'com.jagrosh:DiscordIPC:0.4'
}

compileJava {
    sourceCompatibility = targetCompatibility = 1.8

}



processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}



jar {
    manifest {
        attributes 'FMLAT': 'scammerList_at.cfg'
    }
}


